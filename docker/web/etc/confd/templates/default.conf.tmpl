server {
   listen      80;
   return      307 https://$host$request_uri;
}

{{ range $host := lsdir "/app" }}
server {
    listen     443 ssl;
    server_name {{getv (printf "/app/%s/public" $host) }};
    root /var/www/web;

    client_max_body_size {{ getv "/opg/nginx/clientmaxbodysize" }};
    client_body_timeout {{ getv "/opg/nginx/clientbodytimeout" }};

    ssl_certificate         /etc/nginx/certs/app.crt;
    ssl_certificate_key     /etc/nginx/certs/app.key;

    location / {
        # try to serve file directly, fallback to app_dev.php
        try_files $uri /app_dev.php$is_args$args;
    }

    error_log /var/log/nginx/error.log {{ getv "/nginx/log/level" "warn" }};

    location ~ ^/app_dev\.php(/|$) {
        fastcgi_pass {{getv (printf "/app/%s/host" $host) }}:{{getv (printf "/app/%s/port" $host) }};
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;

        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    # Comply with https://ministryofjustice.github.io/security-guidance/contact/implement-security-txt/#implementing-securitytxt
    rewrite ^/.well_known/security.txt$ https://raw.githubusercontent.com/ministryofjustice/security-guidance/master/contact/vulnerability-disclosure-security.txt permanent;
}
{{ end }}

server {
    listen     443 ssl;
    server_name testbucket.s3.amazonaws.com;

    ssl_certificate         /etc/nginx/certs/app.crt;
    ssl_certificate_key     /etc/nginx/certs/app.key;

    proxy_buffering off;
    resolver 127.0.0.11;

    location / {
        # Force DNS/name resolution by setting target as a parameter
        set $target "http://fakes3:4569";
        proxy_pass $target;
        proxy_set_header Host              $host;
        proxy_set_header X-Forwarded-For   $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    set $uid $http_x_request_id;
    if ($uid = '') {
      set $uid $request_id;
    }
    add_header X-Request-Id $uid;
    proxy_set_header X-Request-Id $uid;
}
