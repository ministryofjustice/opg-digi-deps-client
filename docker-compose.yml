version: '2'

services:
    openssl:
        image: buildpack-deps:stretch
        entrypoint: openssl
        command:
            - req
            - -newkey
            - rsa:4096
            - -x509
            - -nodes
            - -keyout
            - /export/app.key
            - -new
            - -out
            - /export/app.crt
            - -subj
            - "/C=GB/ST=GB/L=London/O=OPG/OU=Digital/CN=default"
            - -sha256
            - -days
            - "3650"
        volumes:
            - certs:/export

    frontend:
        container_name: opgdigidepsdocker_frontend_1
        build: .
        ports:
            - 8070:9000
        links:
            - redisfront
            - wkhtmltopdf
            - router:testbucket.s3.amazonaws.com
            - file-scanner-api
        volumes_from:
            - testresults
        volumes:
            - ./app/config/security.yml:/var/www/app/config/security.yml
            - ./app/config/config.yml:/var/www/app/config/config.yml
            - ./app/config/services.yml:/var/www/app/config/services.yml
            - ./app/config/services:/var/www/app/config/services
            - ./src:/var/www/src:ro
            - ./web:/var/www/web
            - ./scripts:/var/www/scripts
            - ./tests:/var/www/tests
        env_file:
            - ./docker/env/frontend.env
        restart: always
        networks:
            - default
            - digideps

    admin:
        container_name: opgdigidepsdocker_admin_1
        build: .
        ports:
            - 8080:9000
        links:
            - redisadmin
        volumes:
            - ./app/config/security.yml:/var/www/app/config/security.yml
            - ./app/config/config.yml:/var/www/app/config/config.yml
            - ./app/config/services.yml:/var/www/app/config/services.yml
            - ./app/config/services:/var/www/app/config/services
            - ./src:/var/www/src:ro
            - ./web:/var/www/web
            - ./scripts:/var/www/scripts
            - ./tests:/var/www/tests
        env_file:
            - ./docker/env/frontend.env
            - ./docker/env/admin.env
        restart: always
        networks:
            - default
            - digideps

    redisfront:
        container_name: opgdigidepsdocker_redisfront_1
        image: redis:2.8.21
        restart: always

    redisadmin:
        container_name: opgdigidepsdocker_redisadmin_1
        image: redis:2.8.21
        restart: always

    wkhtmltopdf:
        container_name: opgdigidepsdocker_wkhtmlpdf_1
        image: registry.service.opg.digital/opguk/wkhtmlpdf:0.1.209
        restart: always

    router:
        container_name: opgdigidepsdocker_router_1
        build:
            context: .
            dockerfile: docker/web/Dockerfile
        volumes:
            - certs:/etc/nginx/certs
            - ./web:/var/www/web
        ports:
            - 80:80
            - 443:443
        environment:
            APP_FRONTEND_PUBLIC: digideps-client.local
            APP_FRONTEND_HOST: frontend
            APP_FRONTEND_PORT: 9000
            APP_ADMIN_PUBLIC: digideps-admin.local
            APP_ADMIN_HOST: admin
            APP_ADMIN_PORT: 9000
            NGINX_LOG_LEVEL: warn
            OPG_NGINX_CLIENTMAXBODYSIZE: 15M
            OPG_NGINX_CLIENTBODYTIMEOUT: 300s

    fakes3:
        container_name: fakes3
        image: lphoward/fake-s3
        ports:
            - "4569:4569"

    file-scanner-api:
        container_name: file-scanner-api
        build: ../opg-file-scanner-service
        ports:
            - 8443:8443
        links:
            - file-scanner-broker
        volumes:
            - ./log/api:/var/log
        environment:
            SERVICE_ENABLE_UWSGI: "yes"
            SSL_CERT_FILENAME: "/etc/ssl/self-signed.crt"
            SSL_KEY_FILENAME: "/etc/ssl/self-signed.key"
            REDIS_URL: "redis://file-scanner-broker:6379/0"

    file-scanner-worker:
        container_name: file-scanner-worker
        build: ../opg-file-scanner-service
        links:
            - file-scanner-broker
        volumes:
            - ./log/worker:/var/log
        environment:
            SERVICE_ENABLE_CELERY: "yes"
            SERVICE_ENABLE_FRESHCLAM: "yes"
            SERVICE_ENABLE_CLAMD: "yes"
            REDIS_URL: "redis://file-scanner-broker:6379/0"

    file-scanner-broker:
        container_name: file-scanner-broker
        image: redis:3.0.7-alpine

    test:
        container_name: opgdigidepsdocker_test_1
        build: .
        command: tail -f /dev/null
        links:
            - frontend:digideps-client.local
            - admin:digideps-admin.local
        volumes_from:
            - testresults
        volumes:
            - ./app/config/security.yml:/var/www/app/config/security.yml
            - ./app/config/config.yml:/var/www/app/config/config.yml
            - ./app/config/services.yml:/var/www/app/config/services.yml
            - ./app/config/services:/var/www/app/config/services
            - ./src:/var/www/src:ro
            - ./web:/var/www/web
            - ./scripts:/var/www/scripts
            - ./tests:/var/www/tests
        env_file:
            - ./docker/env/frontend.env
            - ./docker/env/test.env
        networks:
            - default
            - digideps

    testresults:
        container_name: opgdigidepsdocker_testresults_1
        image: busybox
        command: tail -f /dev/null
        volumes:
            - /tmp/behat

    composer:
        build:
            context: .
            dockerfile: docker/composer/Dockerfile
        volumes:
            - .:/app

    npm:
        image: node:10.13-stretch
        working_dir: /app
        volumes:
            - .:/app
        entrypoint: ["npm"]
        command:
            - i
volumes:
    certs:

networks:
    digideps:
        external: true
