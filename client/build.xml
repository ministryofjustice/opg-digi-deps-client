<?xml version="1.0" encoding="UTF-8"?>
<project name="main" default="help">

    <fileset dir="." id="source">
        <include name="src/**/*.php"/>
        <include name="web/*.php"/>
        <include name="tests/**/*.php"/>
    </fileset>

     <target name="lint" description="Scan source for PHP syntax errors">
        <phplint haltonfailure="true" level="info">
            <fileset refid="source" />
        </phplint>
        <exec command="php app/console lint:yaml app/config" checkreturn="true" passthru="true"></exec>
        <exec command="php app/console lint:twig src/AppBundle/Resources/views" checkreturn="true" passthru="true"></exec>
    </target>
    
    <target name="composer-install" description="Install packages from composer.lock" unless="skipComposer">
        <if>
            <available file="composer.phar" />
            <then>
                <exec command="php composer.phar self-update" checkreturn="true" passthru="true"/>
            </then>
            <else>
                <exec command="curl -O http://getcomposer.org/composer.phar"/>
                <chmod file="composer.phar" mode="0755" />
            </else>
        </if>
        <exec command="php composer.phar install --no-interaction" checkreturn="true" passthru="true"/>
    </target>
    
    <target name="phpunit">
        <exec passthru="true" command="php vendor/phpunit/phpunit/phpunit -c tests/phpunit/" checkreturn="true"></exec>
    </target>
    
    <target name="optimise">
        <exec passthru="true" command="php composer.phar dump-autoload --optimize" checkreturn="true"></exec>
    </target>
    
    <target name="cache-clear" description="">
        <exec command="rm -rf app/cache/*"/>
        <exec command="rm -rf app/logs/*"/>
        <echo msg="Permission on cache and logs set"></echo>
        
        <exec passthru="true" command="php -r &quot;function_exists('apc_clear_cache') and apc_clear_cache() and apc_clear_cache('user') and apc_clear_cache('opcode') and print 'all apc cache cleared';&quot;"/>
        <echo msg="APC cache cleared"></echo>
    </target>
    
    <target name="check-validation" description="Scan source for PHP syntax errors">
        <exec command="php app/console digideps:validation" checkreturn="true" passthru="true"></exec>
    </target>

    <target name="behat-init" description="Set up test db" depends="cache-clear,fixtures,build-assets">
        <exec command="mkdir -p /tmp/behat/"></exec>
        <exec command="rm -f /tmp/behat/*"></exec>
        <exec command="chmod +x misc/scripts/aha/aha"></exec>
    </target>

    <target name="behat" description="Run all the behat journeys" depends="behat-init">
        <exec command="rm -rf app/cache/*"/>
        <exec command="php vendor/behat/behat/bin/behat --stop-on-failure --suite=deputy" checkreturn="true" passthru="true" ></exec>
        <exec command="php vendor/behat/behat/bin/behat --stop-on-failure --suite=admin" checkreturn="true" passthru="true" ></exec>
    </target>
    
    <target name="behat-log" description="Run all the behat journeys and create HTML output (note: no return code)" depends="behat-init">
        <exec command="rm misc/build/behat.log*"></exec>
        <exec command="vendor/behat/behat/bin/behat | sed '/@journey/d' | sed 's/\[30m#.*/[39m/' | misc/scripts/aha/aha &gt; misc/build/behat.html" />
        <echo msg="Check behat reports inside misc/build/"></echo>
    </target>
    
    <target name="fixtures" description="add fixtures from paramters.yml">
        <exec command="rm -rf app/cache/*"/>
        <exec command="php app/console digideps:fixtures" passthru="true" checkreturn="true"></exec>
        <exec command="rm -rf app/logs/*"/>
        <exec command="rm -rf app/cache/*"/>
    </target>

    <target name="front-end-tools" description="install tools required to build front end assets">
        <exec command="npm install"></exec>
    </target>

    <target name="clean-assets" description="Clear away all built front end assets" depends="front-end-tools">
        <exec command="npm run clean"></exec>
    </target>
    
    <target name="build-assets" description="Clean and build all front end static assets" depends="front-end-tools">
        <exec command="npm run build"></exec>
    </target>

    <target name="check" depends="check-validation,lint">
    </target>

    <target name="build" depends="cache-clear,composer-install,check,fixtures,build-assets">
    </target>

    <target name="build-admin" depends="cache-clear,composer-install,check,build-assets">
    </target>
 
    <target name="release" depends="build">
    </target>
    
    <target name="test" depends="behat,phpunit">
    </target>

</project>
